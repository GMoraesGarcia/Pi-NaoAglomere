create database staticdb;
use staticdb;

CREATE TABLE Empresa (
ID_empresa int not null PRIMARY KEY auto_increment,
Nome_Empresa varchar(30) not null,
CNPJ varchar(18) not null Unique,
Email varchar(50) not null,
Descricao varchar(100) not null,
Telefone varchar(15) not null,
Senha varchar(20),
QTD_Max int not null,
Rua varchar(30) not null,
Bairro varchar(20),
Numero int not null,
Regras varchar(500) not null,
Tipo_Cadastro varchar(8)
);

CREATE TABLE HorariosDisponiveis(
id INT NOT NULL AUTO_INCREMENT,
id_empresa INT NOT NULL,
horarios_disponiveis time,
Status_horarios VARCHAR(10), 
PRIMARY KEY (id),
FOREIGN KEY (id_empresa) REFERENCES  Empresa (ID_empresa)
);

CREATE TABLE agendamento (
    num_agendamento  INT NOT NULL auto_increment,
    email 			 VARCHAR(50),
    usuario_id       int NOT NULL,
    telefone 		 VARCHAR(20),
    empresa_id       INT NOT NULL,
    data_Agend        DATE NOT NULL,
    horario          time NOT NULL,
    PRIMARY KEY ( num_agendamento ),
    FOREIGN KEY (usuario_id) REFERENCES usuario (id),										
    FOREIGN KEY (empresa_id ) REFERENCES Empresa (ID_empresa)
	
);

CREATE TABLE usuario (
    id               int NOT NULL auto_increment,
    nome             VARCHAR(30) NOT NULL,
    cpf              VARCHAR(11) NOT NULL,
    email            VARCHAR(50) NOT NULL,
    data_nascimento  DATE NOT NULL,
    telefone         VARCHAR(30) NOT NULL,
    senha            VARCHAR(20) NOT NULL,
    tipo_cadastro    varchar(20) NOT NULL,
     PRIMARY KEY ( id ),
     UNIQUE(cpf)
);

CREATE TABLE Codigos_Gerados (
codigo varchar(20) not null,
empresa_id int not null,
data_geracao date not null,
horario_geracao TIME NOT NULL,
PRIMARY KEY (codigo),
FOREIGN KEY (empresa_id ) REFERENCES Empresa (ID_empresa)
);

CREATE TABLE CodigosPorUsuario(
id int auto_increment,
codigo varchar(20),
usuario_id int,
data_gera DATE NOT NULL,
horario Time not null,
PRIMARY KEY (id),
FOREIGN KEY (usuario_id) REFERENCES usuario (id),
FOREIGN KEY (codigo) REFERENCES Codigos_Gerados(codigo)
);

DELIMITER $$
CREATE PROCEDURE Sp_selectAgentEmpresa (CNPJn varchar(18))
BEGIN
select ep.Nome_Empresa,us.nome,ag.data_Agend,ag.horario from agendamento as ag
INNER JOIN empresa as ep on  ag.empresa_id = ep.ID_empresa
INNER JOIN usuario as us on ag.usuario_id = us.id
WHERE ep.cnpj = CNPJn and ag.data_agend >= current_date()
ORDER BY ag.data_Agend;
end $$

call Sp_selectAgentEmpresa('41.173.747/0001-80'); #Chamada da procedure 


DELIMITER $$
CREATE PROCEDURE Sp_selectAgendUser(cpfn VARCHAR(11))
BEGIN
SELECT u.nome,e.nome_empresa,ag.data_agend,ag.horario,ag.num_agendamento FROM agendamento as ag
INNER JOIN usuario as u on ag.usuario_id = u.id
INNER JOIN empresa as e on ag.empresa_id = e.ID_empresa
where u.cpf  = cpfn and ag.data_agend >= current_date()
ORDER BY ag.data_Agend;
end $$

call Sp_selectAgendUser('89547563210'); #Chamada da procedure 


DELIMITER $$
CREATE PROCEDURE Sp_Qtd_Agend(dataHj timestamp, empresa int)
BEGIN
SELECT  count(*) as qtd_Agend from agendamento as ag
where data_agend = dataHj and empresa_id = empresa;
end $$

call Sp_Qtd_Agend (CURRENT_DATE(), 2);

DELIMITER $$
CREATE PROCEDURE SP_qtd (horario time, id_emp int)
begin
select  count(*)as qtd  from CodigosPorUsuario  as cp
inner join Codigos_Gerados as cg on cp.codigo = cg.codigo
where cp.data_gera = current_date() and cp.horario >= horario and cg.empresa_id = id_emp;
end $$

DELIMITER $$
create procedure sp_geraqtdPessoas (cod_emp int )
begin
select cp.horario from CodigosPorUsuario  as cp
inner join Codigos_Gerados as cg on cp.codigo = cg.codigo
where cp.data_gera = current_date() and cg.empresa_id = cod_emp
group by cg.empresa_id ;
end $$
